services:
  django:
    container_name: kajisuke-django
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/backend
    ports:
      - 8000:8000
    env_file:
      - .env    
    tty: true
    # 実行権限に頼らず、shで明示的に実行（エラー回避のため）
    command: sh entrypoint.sh
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    container_name: kajisuke-mysql
    image: mysql:8.0.27
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - kajisuke-db:/var/lib/mysql
    # DBのコンテナのヘルスチェックを行う
    # mysqladmin(MySQLサーバーの管理を行うクライアントを使ってDBコンテナ自身(127.0.0.1)にpingを送ってヘルスチェックを行う
    healthcheck:
      test: "mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD"
      interval: 10s
      timeout: 10s
      retries: 10

  phpmyadmin:
    container_name: kajisuke-pma
    image: phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=kajisuke-mysql
      - PMA_USER=root
      - PMA_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - 3001:80
    depends_on:
      - mysql
   
volumes:
  kajisuke-db: